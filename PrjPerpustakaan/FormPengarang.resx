<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnTambah.CustomImages.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAABPxJREFUeF7t
        m+uLVVUYxkfBskAl8w8oFS+VYGpIUF/MvGsXwT9B7YN+q8Ao5gJzAR118jbot8ALKmpZJhiRFxTzUhQE
        eYOMSMVMMlBxnJ4HnyPvednmvqx9zh5m/+BhDvtd63nfs87ea+2zz5qGkpKSkpKSfGlsbHwBWg5tgY5C
        f0J/OfEYY1uampqWtbS0jFf3vgneyCRoNfQ71JtSl6FV0ETZFhsUOhB6FzoJRb2hLDqBM+Md/B2odMWi
        ubn5VRT3gyk4L51FrqlKW386OzufQlHroR5TpNff0Bf4BN+HZuP1yLa2tmescM2PwvE50AdsC92Eorwo
        5lrb1dX1pMqoD/gkXkQhP5vCfJF78Ybfwt8n1CU27AO9TQ/oUYP7PQbueXWpLXjzr6MAfrJRhW0NOYvD
        j6vIDuNvdRW1vKKmtQFJZ0D/miIqugBNV7PgwJt5mcPn/QfKLW8VOKVnItkdk7yitZwP1Cw3NOdsdrkp
        1jRDzfKBpzWS3DBJqfvQCjWpGcj5iXLbWm6gxrFqEhaYPw39ZJJRLGCxmtQc5F6qGmxNP+ZyJsJ4k0vU
        i8vhI4XrBpdWXxe0TuEw6CbHL0XbFK47qOUzV1tPyJVhAAzPuATnOjo6hihed1gLajrvajyJ0IAHLTIA
        I97bW2Nec68pXBh0X+LngwUKpwcmx5xpYU59D2rb5Wo9olA6MKqTnWFPqGXG+fbqcCa0TFfNVXgPLyuc
        HBissWbQlwplxvkGGQACrwPOe5VCieHk94c1w5KzULHMWF9KhzMDr0XO+7JCydDpZI1uhvz66bxDDsBg
        6Jb1hsYoHB982u85k2CnP3HewQaAwO9r55/8bhWdNloTDMiHCgXBelM6HAT4rXD+ye8M0elbZzJHoSA4
        76ADgA9rvvM/pFB80OmiM0l+Hf0PzjvoAETMX+cVig86XbcmfG6nUCxs3xCSbSxaW1ufdf2vKRQfdKp6
        6NHd3T1IoVjYviEk21igPZ8n2v63FYoPOt21Jn1pALhcu/6pBqDqEoCGKxQL1zezZBsLtB/h+qe6BC45
        k343CX5jTbi0KBQE603pcBDgx98TrP9BheKDTv37RijiVviAQkFw3qEHIPutML/3O5NbIZ+2Ou9gAwCv
        qC9DoxVOBjr+5owWKZQZ5xtyAPzX4UsKJQedVzqz/QplxvmGHICvnHe7QslBZ/4oac2oSQpnwvvqcCbg
        M8X7QuMUTgcMuG/HGm5XqHCgtt2u1u8USg9WgzedKZfEuQoXBtQ1z9cJTVM4E3w2eMIZ/1qkH0ZQz1Do
        nKmPyvZI3MKfmWDofxorzKWAWna62u5lehweBUw3uCS8FD5WuG6gDlJVF9SlcDi0MeGsS3Qfg7BETWpO
        xN0qdQoarCZhwd0hd3JdM8koDkLNfybn2cfcrpYr0HNqkg+4tiYgid8lQu2DEj0zSANzQJ8rpxVreknN
        8gWjz6XR329TFxB7Q82Co7z13SRVAWfCVCT1l0NFtdwmd4WrlJrWFiQfCZ02xVhx2dyDTy3VRkk913vs
        Rkko32v+caAAfv38FLoHRRVJcdvrw62ynEzb29uHyaKBrzXBVrbK7lefKC+KuVbXfaushTceKOqIKTIv
        HYaKu30exc2CjqvYkOJOlXw3QoYExfa/f5h4FHgDnMX5LzPca3gQ+gW6CnFyo/iax/gsbxPmib7/LzMl
        JSUlJYWnoeE/MDI4QWu4gjsAAAAASUVORK5CYII=
</value>
  </data>
</root>